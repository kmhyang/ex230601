<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->


	<!-- ★☆★☆★☆★☆ -->
	<!-- mvc(model, view, controller)설정과 관련된 여러 처리를 담당하는 설정 파일로 DAO, VO, service 
		등과 같은 파일을 어떻게 사용할 것인가 빈(객체)들을 관리하는 문서 -->

	<context:property-placeholder location="classpath:config/db.properties"/>

	<!-- db property -->
	<!-- data-source connection pool --><!-- db 정보를 가지고 있음 // 커넥션 풀 설정하는 부분 -->
	<!-- 최소, 대기시간, 접근 많으면 끊을지 등. 설정 가능 -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="${driver}" />
		<property name="jdbcUrl" value="${url}" /> <!-- :log4jdbc 추가 -->
		<property name="username" value="${user}" />
		<property name="password" value="${password}" />
	</bean>


	<!-- db 연결 --> <!-- 커넥션 풀을 만듦 --> <!-- DBCP?? -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>

	<!-- mybatis SqlSessionFactory -->
	<!-- mapper.xml sql 실행 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/mybatis-config.xml"></property> <!-- resources - mybatis-config.xml 읽어옴. -->
	</bean>

	<!-- Transaction Manager 설정 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- namespace에서 tx 추가 -->
	<!-- AaaServiceImpl : @Transactional -->
	<tx:annotation-driven /> <!-- 번호 앞 화살표 : AOP관련 내용이라는 표시 -->

	<!-- mapper scan -->
	<!-- (인터페이스)DAO -> 구현 클래스를 만들어줌 -->
	<!-- 패키지 명이 변경되면 같이 바꿔줘야 함. -->
	<mybatis-spring:scan
		base-package="com.yedam.app.**.mapper" />
	<!-- <mybatis-spring:scan base-package="com.yedam.app" /> -->


</beans>
